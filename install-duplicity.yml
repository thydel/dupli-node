#!/usr/bin/env ansible-playbook
---


- name: Install duplicity
  hosts: g_duplicity

  vars:
    aname: duplicity
    debian_9:
      serie: 0.7
      version: 18.2
      branch: ""
      python: python2
    debian_10: &debian_10
      serie: 0.8
      version: 20
      branch: rel.
      python: python3
    debian_11: *debian_10
    prefix: '{{ "debian_" + ansible_distribution_major_version }}'
    v: vars
    serie: '{{ lookup(v, prefix).serie }}'
    version: '{{ lookup(v, prefix).version }}'
    branch: '{{ lookup(v, prefix).branch }}'
    python: '{{ lookup(v, prefix).python }}'
    base: '{{ aname }}-{{ branch }}{{ serie }}.{{ version }}'
    targz: '{{ base }}.tar.gz'
    urlt: >-
      https://code.launchpad.net/{{ aname }}/
      {{ serie }}-series/{{ serie }}.{{ version }}/
      +download/{{ targz }}
    old_url: '{{ urlt | replace(" ", "") }}'
    new_url: https://gitlab.com/{{ aname }}/{{ aname }}/-/archive/{{ branch }}{{ serie }}.{{ version }}/{{ base }}.tar.gz
    url: |-
      {% if ansible_distribution_major_version | int < 10 %}{{ old_url }}{%- else %}{{ new_url }}{%- endif %}
    # e.g.
    # https://launchpad.net/duplicity/0.7-series/0.7.18.2/+download/duplicity-0.7.18.2.tar.gz
    # https://gitlab.com/duplicity/duplicity/-/archive/rel.0.8.20/duplicity-rel.0.8.20.tar.gz
    local: /usr/local
    tmp: '{{ local }}/tmp'
    src: '{{ local }}/src'
    bin: '{{ local }}/bin'

  tasks:

    - delegate_to: localhost
      block:

      - name: Create tmp dir
        file: { path: tmp, state: directory }

      - name: Do not commit tmp
        lineinfile: { path: .gitignore, line: tmp, create: True }

      - name: Get release from official site
        environment: '{{ proxy_env | default({}) }}'
        get_url:
          url: '{{ url }}'
          dest: '{{ playbook_dir }}/tmp'

    - become: True
      block:

      - name: Extract tar
        unarchive:
          src: tmp/{{ targz }}
          dest: '{{ local }}/src'
          extra_opts: --no-same-owner
          creates: '{{ src }}/{{ base }}'

      - name: Install deps (debian < 11)
        apt: { name: [ gcc, python-dev, python-setuptools, python-fasteners, librsync-dev ] }
        when: ansible_distribution_major_version | int < 11

      - name: Install deps (debian == 11)
        apt: { name: [ gcc, librsync-dev ] }
        when: ansible_distribution_major_version | int == 11

      - name: Install deps (debian > 9)
        apt:
          name:
            - gettext
            - python3-dev
            - python3-distutils
            - python3-fasteners
            - python3-future
            - python3-paramiko
            - python3-pexpect
            - python3-setuptools
            - python3-setuptools-scm
        when: &post_stretch ansible_distribution_major_version | int > 9

      - name: Install
        command: "{{ python }} setup.py install --prefix={{ local }} --record files.txt"
        args:
          chdir: '{{ src }}/{{ base }}'
          creates: '{{ bin }}/{{ aname }}'

    - become: True
      when: *post_stretch
      tags: pip
      block:

      - { name: Install pip, apt: { name: [ python3-pip ] }}

      - name: install newer paramiko
        vars: { pips: [ paramiko==2.5 ] }
        pip: { executable: pip3, name: '{{ pips }}' }
        environment: { https_proxy: '{{ https_proxy }}' }
